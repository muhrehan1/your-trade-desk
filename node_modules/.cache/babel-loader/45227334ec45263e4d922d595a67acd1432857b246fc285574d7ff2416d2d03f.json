{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\your-trade-desk\\\\src\\\\components\\\\UserLists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserLists() {\n  _s();\n  const [userData, setUserData] = useState([]);\n  useEffect(() => {\n    // Fetch data from the API when the component mounts\n    fetch('http://127.0.0.1:8000/api/resource').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setUserData(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []); // Empty dependency array ensures the effect runs once after the initial render\n\n  // Define the function to send data to Laravel\n  const sendDataToLaravel = () => {\n    const requestData = {\n      key: 'value' // Your data to be sent\n    };\n\n    axios.post('http://127.0.0.1:8000/api/send-data', requestData, {\n      headers: {\n        'Content-Type': 'application/json'\n        // Include CSRF token in request headers (if required by your Laravel backend)\n        // 'X-CSRF-TOKEN': csrfToken,\n      }\n    }).then(response => {\n      console.log('Response from Laravel:', response.data);\n      // Handle the response from Laravel here\n    }).catch(error => {\n      console.error('Error:', error);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        console.error('Response headers:', error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('Request data:', error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error message:', error.message);\n      }\n    });\n  };\n\n  // Call sendDataToLaravel when userData changes (i.e., after data is fetched from /api/resource)\n  useEffect(() => {\n    sendDataToLaravel();\n  }, [userData]); // Call this effect whenever userData changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: userData && userData.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", user.name, \"Email: \", user.email]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(UserLists, \"8vsPbv7NZKmS6rljhTYlnIdl1Ls=\");\n_c = UserLists;\nexport default UserLists;\nvar _c;\n$RefreshReg$(_c, \"UserLists\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserLists","_s","userData","setUserData","fetch","then","response","ok","Error","json","data","catch","error","console","sendDataToLaravel","requestData","key","post","headers","log","status","request","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","email","id","_c","$RefreshReg$"],"sources":["C:/wamp64/www/your-trade-desk/src/components/UserLists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UserLists() {\r\n    const [userData, setUserData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch data from the API when the component mounts\r\n        fetch('http://127.0.0.1:8000/api/resource')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setUserData(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, []); // Empty dependency array ensures the effect runs once after the initial render\r\n\r\n    // Define the function to send data to Laravel\r\n    const sendDataToLaravel = () => {\r\n        const requestData = {\r\n            key: 'value', // Your data to be sent\r\n        };\r\n\r\n        axios.post('http://127.0.0.1:8000/api/send-data', requestData, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // Include CSRF token in request headers (if required by your Laravel backend)\r\n                // 'X-CSRF-TOKEN': csrfToken,\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log('Response from Laravel:', response.data);\r\n                // Handle the response from Laravel here\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                if (error.response) {\r\n                    // The request was made and the server responded with a status code\r\n                    // that falls out of the range of 2xx\r\n                    console.error('Response data:', error.response.data);\r\n                    console.error('Response status:', error.response.status);\r\n                    console.error('Response headers:', error.response.headers);\r\n                } else if (error.request) {\r\n                    // The request was made but no response was received\r\n                    console.error('Request data:', error.request);\r\n                } else {\r\n                    // Something happened in setting up the request that triggered an Error\r\n                    console.error('Error message:', error.message);\r\n                }\r\n            });\r\n\r\n    };\r\n\r\n    // Call sendDataToLaravel when userData changes (i.e., after data is fetched from /api/resource)\r\n    useEffect(() => {\r\n\r\n        sendDataToLaravel();\r\n    }, [userData]); // Call this effect whenever userData changes\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>User List</h1>\r\n            <ul>\r\n                {userData && userData.map((user) => (\r\n                    <li key={user.id}>\r\n                        Name: {user.name}\r\n                        Email: {user.email}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserLists;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}